<% filter_fitting_instructions = false if local_assigns[:filter_fitting_instructions].nil? %>
<% filter_generic_categories = false if local_assigns[:filter_generic_categories].nil? %>
<% cache([cache_key, @vehicle_filter, filter_fitting_instructions, filter_generic_categories]) do %>
<%
  if @vehicle_filter.present?
    if filter_generic_categories
      categories = Refinery::Ironman::Category.includes(:products => [:vehicles]).references(:products => [:vehicles]).where('refinery_ironman_vehicles.id in (?)', @vehicle_filter.values).map(&:root).select(&:active?).uniq
    else
      categories = Refinery::Ironman::Category.includes(:products => [:vehicles]).references(:products => [:vehicles]).where('(refinery_ironman_products.draft = 0 and (refinery_ironman_vehicles.id in (?) /*disabling generic products for now: or (refinery_ironman_vehicles.id is null and refinery_ironman_products.id is not null)*/))', @vehicle_filter.values).map(&:root).select(&:active?).uniq
    end
  else
    categories = Refinery::Ironman::Category.roots.active
  end

  if filter_fitting_instructions
    categories = categories.has_fitting_instructions
  else
    if categories.kind_of?(Array)
      categories = categories.select(&:show_in_products?)
    else
      categories = categories.show_in_products
    end
  end

  if category.present?
    subcategories = category.children.active

    if filter_fitting_instructions
      subcategories = subcategories.has_fitting_instructions
    else
      subcategories = subcategories.show_in_products
    end
  else
    subcategories = []
  end

  if subcategory.present?
    sub_subcategories = subcategory.children.active
    if filter_fitting_instructions
      sub_subcategories = sub_subcategories.has_fitting_instructions
    else
      sub_subcategories = sub_subcategories.show_in_products
    end
  else
    sub_subcategories = []
  end
%>

<%= form_tag refinery.ironman_products_path, {:method => :get} do %>
  <div class="form-group clearfix category-selector right">
    <%= label_tag :category_1st_id, t('.category.label'), class:'control-label col-sm-3 col-md-2' %>

    <div class="control col-sm-3 col-md-2">
      <%= styled_select_tag :category_1st_id, options_from_collection_for_select(categories, 'slug', 'name', (category.slug if category.present?)), :prompt => t('.category.prompt'), :class => 'form-control' %>
    </div>

    <div class="control col-sm-3 col-md-2">
    <%= styled_select_tag :category_2nd_id, options_from_collection_for_select(subcategories, 'slug', 'name', (subcategory.slug if subcategory.present?)),
                   'data-option-dependent' => true,
                   'data-option-observed' => 'category_1st_id',
                   'data-option-url' => '/categories/:category_1st_id:/children.json',
                   'data-option-key-method' => :slug,
                   'data-option-value-method' => :name,
                   :prompt => t('.subcategory.prompt'),
                   :class => 'form-control' %>
    </div>

    <div class="control col-sm-3 col-md-2">
    <%= styled_select_tag :category_3rd_id, options_from_collection_for_select(sub_subcategories, 'slug', 'name', (sub_subcategory.slug if sub_subcategory.present?)),
                   'data-option-dependent' => true,
                   'data-option-observed' => 'category_2nd_id',
                   'data-option-url' => '/categories/:category_2nd_id:/children.json',
                   'data-option-key-method' => :slug,
                   'data-option-value-method' => :name,
                   :prompt => t('.subsubcategory.prompt'),
                   :class => 'form-control' %>
    </div>
  </div>
<% end %>
<% end %>
